// User function Template for Java

class Solution {

    int countPairs(int arr[], int target) {
        // Complete the function
        int count = 0;
        int left = 0;
        int right = arr.length-1;
        while(left < right){
            int sum = arr[left] + arr[right];
            if(sum == target){
                count++;
                int l = left+1;
                while(l < right && arr[l] == arr[left]){
                    count++;
                    l++;
                }
                int r = right-1;
                while(left < r && arr[r] == arr[right]){
                    count++;
                    r--;
                }
                left++;
                right--;
            }
            else if(sum < target){
                left++;
            }
            else{
                right--;
            }
        }
        return count;
    }
}



Solution II


// User function Template for Java

class Solution {

    int countPair(int k, int arr[]) {
        // Complete the function
        int res=0;
        Map<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<arr.length;i++){
            int complement=k-arr[i];
            if(map.getOrDefault(complement,0)==arr[i]){
                if(map.getOrDefault(complement,0)==1)
                res++;
            }
            else if(map.getOrDefault(complement,0)>0 && map.getOrDefault(arr[i],0)==0)
            res++;
            map.put(arr[i],map.getOrDefault(arr[i],0)+1);
        }
         return res;
    }
   
}
